@using Client.Pages.ProjectsPage.Request
@using Client.SharedComponents.Forms
@using Client.SharedComponents.Modal
@using Client.SharedComponents.Selectors
@rendermode RenderMode.InteractiveWebAssembly

<DefaultForm1 Header="Первичные данные" Model="Model" TModelType="CreateProjectModelByGrapeVarety" SubmitButton="OnSubmit">
    <DataAnnotationsValidator />
    <p><InputText @bind-Value="Model.ProjectName" placeholder="Название проекта"></InputText></p>
    <ValidationMessage For="(()=>Model.ProjectName)" />
    <p><InputNumber @bind-Value="Model.Wort" placeholder="Объем сусла Л."></InputNumber></p>
    <ValidationMessage For="(()=>Model.Wort)" />
    <p><BaseSelector Options="ListGrapeVarieties" SelectOptionEvent="SelectOption" TEnumType="string"></BaseSelector></p>
    <ValidationMessage For="(()=>Model.GrapeName)" />
    <p>Желаемые показатели</p>
    <p><InputNumber @bind-Value="Model.DesiredAlcoholValue" placeholder="Процентное содержание спирта"></InputNumber></p>
    <ValidationMessage For="(()=>Model.DesiredAlcoholValue)" />
    <p><InputNumber @bind-Value="Model.DesiredSugarValue" placeholder="Содержание сахара г/Л."></InputNumber></p>
    <ValidationMessage For="(()=>Model.DesiredSugarValue)" />
    <p><input type="submit" value="Создать"></p>
</DefaultForm1>

@code {
    private const string GET_GRAPE_VARIETIES_ERROR = "Не удалось получить список сортов винограда. Попробуйте повторить попытку позже";

    /// <summary>
    /// Модель для создания по сорту винограда
    /// </summary>
    public CreateProjectModelByGrapeVarety Model { get; set; } = new();

    /// <summary>
    /// Сорта винограда
    /// </summary>
    [EditorRequired, Parameter]
    public Dictionary<string, string> ListGrapeVarieties { get; set; } = new();

    /// <summary>
    /// Обработчик нажатия кнопки отправить
    /// </summary>
    [Parameter]
    public EventCallback<CreateProjectModelByGrapeVarety> SubmitButton { get; set; }

    /// <summary>
    /// Модалка
    /// </summary>
    [CascadingParameter]
    public IModalService Modal { get; set; } = default!;

    protected override void OnParametersSet()
    {
        if (ListGrapeVarieties.Count == 0)
            ShowErrorModal(GET_GRAPE_VARIETIES_ERROR, "Ошибка при получении сортов винограда");
    }

    /// <summary>
    /// Обработчик кнопки создать
    /// </summary>
    private async Task OnSubmit(CreateProjectModelByGrapeVarety model)
    {
        await SubmitButton.InvokeAsync(Model);
    }

    private void SelectOption(string selectedGrapeVarety)
    {
        Model.GrapeName = selectedGrapeVarety;
    }

    private void ShowErrorModal(string message, string title)
    {
        var errors = new List<string> { message };
        var parameter = new ModalParameters().Add(nameof(ErrorModal.Errors), errors);
        Modal.Show<ErrorModal>(title, parameter);
    }
}