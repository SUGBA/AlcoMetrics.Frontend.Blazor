@using Client.Pages.ProjectsPage.Request
@using Client.SharedComponents.Forms
@using Client.SharedComponents.Modal
@using Client.SharedComponents.Selectors
@inject Blazored.Modal.Services.IModalService ModalService
@rendermode RenderMode.InteractiveWebAssembly

<DefaultForm1 Header="Первичные данные" Model="Model" TModelType="CreateProjectModelByGrapeVarety" SubmitButton="OnSubmit">
    <DataAnnotationsValidator />
    <p><InputText @bind-Value="Model.ProjectName" placeholder="Название проекта"></InputText></p>
    <ValidationMessage For="(()=>Model.ProjectName)" />
    <p><InputNumber @bind-Value="Model.Wort" placeholder="Объем сусла"></InputNumber></p>
    <ValidationMessage For="(()=>Model.Wort)" />
    <p><BaseSelector Options="ListGrapeVarieties" SelectOptionEvent="SelectOption" TEnumType="string"></BaseSelector></p>
    <ValidationMessage For="(()=>Model.GrapeName)" />
    <p>Желаемые показатели</p>
    <p><InputNumber @bind-Value="Model.DesiredAlcoholValue" placeholder="Процентное содержание спирта"></InputNumber></p>
    <ValidationMessage For="(()=>Model.DesiredAlcoholValue)" />
    <p><InputNumber @bind-Value="Model.DesiredSugarValue" placeholder="Содержание сахара"></InputNumber></p>
    <ValidationMessage For="(()=>Model.DesiredSugarValue)" />
    <p><input type="submit" value="Создать"></p>
</DefaultForm1>

@code {
    /// <summary>
    /// Модалка
    /// </summary>
    [CascadingParameter] public IModalService Modal { get; set; } = default!;

    /// <summary>
    /// Модель для создания по сорту винограда
    /// </summary>
    public CreateProjectModelByGrapeVarety Model { get; set; } = new();

    /// <summary>
    /// Сорта винограда
    /// </summary>
    private Dictionary<string, string> ListGrapeVarieties = new();

    protected override void OnInitialized()
    {
        var a = Model;
        ListGrapeVarieties = GetListGrapeVarieties();
    }

    /// <summary>
    /// Получение сортов винограда
    /// </summary>
    /// <returns></returns>
    private Dictionary<string, string> GetListGrapeVarieties()
    {
        return new Dictionary<string, string>()
        {
            {"Изабела", "Изабела"},
            {"Кишмиш", "Кишмиш"},
            {"Шуньчуан", "Шуньчуан"},
            {"Саперави", "Саперави"},
        };
    }


    /// <summary>
    /// Обработчик кнопки создать
    /// </summary>
    private void OnSubmit(CreateProjectModelByGrapeVarety model)
    {
        var viewDict = new Dictionary<string, string>()
        {
            {"Сорт винограда", Model.GrapeName??string.Empty},
            {"Имя проекта", Model.ProjectName??string.Empty},
            {"Желаемый сахар", Model.DesiredSugarValue==null?string.Empty:((float)Model.DesiredSugarValue).ToString()},
            {"Желаемый спирт", Model.DesiredAlcoholValue==null?string.Empty:((float)Model.DesiredAlcoholValue).ToString()},
            {"Объем", Model.Wort==null?string.Empty:((float)Model.Wort).ToString()}
        };
        var parameter = new ModalParameters().Add(nameof(BaseModal1<string>.Values), viewDict);
        Modal.Show<BaseModal1<string>>("Some text from onSubmit", parameter);
    }

    private void SelectOption(string selectedGrapeVarety)
    {
        Model.GrapeName = selectedGrapeVarety;
    }
}