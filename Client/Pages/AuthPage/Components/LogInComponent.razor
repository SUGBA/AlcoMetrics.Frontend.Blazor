@using Client.Auth
@using Client.Auth.Abstract
@using Client.Auth.PasswordAuthentification.Abstract
@using Client.Auth.Share
@using Client.Pages.AuthPage.Models
@using Client.SharedComponents.Forms
@using Client.SharedComponents.Modal
@inject IAuthorizeAPI authAPI
@inject NavigationManager Navigation
@inject AuthenticationStateProvider authenticationStateProvider
@rendermode RenderMode.InteractiveWebAssembly

<DefaultForm1 Header="Вход" Model="Model" TModelType="LoginModel" SubmitButton="Submit">
    <DataAnnotationsValidator />
    <p><InputText @bind-Value="Model.Login" placeholder="Логин"></InputText></p>
    <ValidationMessage For="(()=>Model.Login)" />
    <p><InputText type="password" @bind-Value="Model.Password" placeholder="Пароль"></InputText></p>
    <ValidationMessage For="(()=>Model.Password)" />
    <p><input type="submit" value="Войти"></p>
</DefaultForm1>

@code {
    private LoginModel Model = new();

    /// <summary>
    /// Модалка
    /// </summary>
    [CascadingParameter] public IModalService Modal { get; set; } = default!;

    /// <summary>
    /// Обработчик входа
    /// </summary>
    private async Task Submit()
    {
        if (string.IsNullOrEmpty(Model.Login) || string.IsNullOrEmpty(Model.Password))
            return;

        var token = await authAPI.Login(Model.Login, Model.Password);
        if (!string.IsNullOrEmpty(token))
        {
            await ((IdentityAuthenticationStateProvider)authenticationStateProvider).AuthorizeUser(token);
            Navigation.NavigateTo("ProjectPage");
        }
        else
        {
            Model = new();
            ShowErrorModal();
        }
    }

    /// <summary>
    /// Метод отображающий список ошибок в модалке
    /// </summary>
    /// <param name="errors"> Список ошибок </param>
    private void ShowErrorModal()
    {
        var errors = new List<string> { "Не удалось войти в систему. Повторите попытку спустя некоторое время." };
        var parameter = new ModalParameters().Add(nameof(ErrorModal.Errors), errors);
        Modal.Show<ErrorModal>("Ошибка в процессе входа в систему", parameter);
    }
}
