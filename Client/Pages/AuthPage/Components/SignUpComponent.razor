@using Client.Auth.PasswordAuthentification.Abstract
@using Client.Pages.AuthPage.Models
@using Client.SharedComponents.Forms
@using Client.SharedComponents.Modal
@inject NavigationManager navManager
@inject IAuthorizeAPI authAPI
@rendermode RenderMode.InteractiveWebAssembly

<DefaultForm1 Header="Регистрация" Model="Model" TModelType="RegisterModel" SubmitButton="Submit">
    <DataAnnotationsValidator />
    <p><InputText @bind-Value="Model.Login" placeholder="Логин"></InputText></p>
    <ValidationMessage For="(()=>Model.Login)" />
    <p><InputText type="password" @bind-Value="Model.Password" placeholder="Пароль"></InputText></p>
    <ValidationMessage For="(()=>Model.Password)" />
    <p><InputText type="password" @bind-Value="Model.RepeatPassword" placeholder="Повторить пароль"></InputText></p>
    <ValidationMessage For="(()=>Model.RepeatPassword)" />
    <p><input type="submit" value="Зарегестрироваться"></p>
</DefaultForm1>

@code {
    private RegisterModel Model = new();

    /// <summary>
    /// Модалка
    /// </summary>
    [CascadingParameter] public IModalService Modal { get; set; } = default!;

    /// <summary>
    /// Обработчик регистрации
    /// </summary>
    private async Task Submit()
    {
        if (string.IsNullOrEmpty(Model.Login) || string.IsNullOrEmpty(Model.Password))
            return;

        var errors = (await authAPI.Register(Model.Login, Model.Password)).ToList();
        if (errors.Count() == 0)        //Если ошибок нету перенаправляем на страницу аутентификации
        {
            navManager.NavigateTo("/auth", true);
        }
        else
        {
            Model = new();
            ShowErrorModal(errors);
        }
    }

    /// <summary>
    /// Метод отображающий список ошибок в модалке
    /// </summary>
    /// <param name="errors"> Список ошибок </param>
    private void ShowErrorModal(IEnumerable<string> errors)
    {
        var parameter = new ModalParameters().Add(nameof(ErrorModal.Errors), errors);
        Modal.Show<ErrorModal>("Ошибка в процессе регистрации", parameter);
    }
}
