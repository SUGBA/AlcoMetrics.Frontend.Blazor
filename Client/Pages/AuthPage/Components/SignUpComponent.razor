@using Client.Pages.AuthPage.Models
@using Client.SharedComponents.Forms
@using Client.SharedComponents.Modal
@rendermode RenderMode.InteractiveWebAssembly

<DefaultForm1 Header="Регистрация" Model="Model" TModelType="RegisterModel" SubmitButton="Submit">
    <DataAnnotationsValidator />
    <p><InputText @bind-Value="Model.Login" placeholder="Логин"></InputText></p>
    <ValidationMessage For="(()=>Model.Login)" />
    <p><InputText type="password" @bind-Value="Model.Password" placeholder="Пароль"></InputText></p>
    <ValidationMessage For="(()=>Model.Password)" />
    <p><InputText type="password" @bind-Value="Model.RepeatPassword" placeholder="Повторить пароль"></InputText></p>
    <ValidationMessage For="(()=>Model.RepeatPassword)" />
    <p><input type="submit" value="Войти"></p>
</DefaultForm1>

@code {
    private RegisterModel Model = new();

    /// <summary>
    /// Модалка
    /// </summary>
    [CascadingParameter] public IModalService Modal { get; set; } = default!;

    /// <summary>
    /// Обработчик регистрации
    /// </summary>
    private void Submit()
    {
        var viewDict = new Dictionary<string, string>()
        {
            {"Кнопка: ", $"Вход" },
            {"Логин: ", $"{Model.Login}" },
            {"Пароль: ", $"{Model.Password}" },
            {"Пароль x2: ", $"{Model.RepeatPassword}" },
        };
        var parameter = new ModalParameters().Add(nameof(BaseModal1<string>.Values), viewDict);
        Modal.Show<BaseModal1<string>>("Some text from onSubmit", parameter);
    }
}
