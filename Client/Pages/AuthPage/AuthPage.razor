@page "/auth"
@layout LoginLayout
@rendermode RenderMode.InteractiveWebAssembly
@using Client.Auth.Abstract
@using Client.Pages.AuthPage.Components
@using Client.Pages.AuthPage.Models
@using Client.SharedComponents.Modal

<div class="contentRowsContainer">
    <div class="authContainer">
        <a @onclick="(()=>SetAuthPageMode(LoginOrRegisterEnum.Register))"><div class="signup">Регистрация</div></a>
        <a @onclick="(()=>SetAuthPageMode(LoginOrRegisterEnum.Login))"><div class="login">Авторизация</div></a>
        @AuthPageModel
    </div>
</div>

@code {
    /// <summary>
    /// Модалка
    /// </summary>
    [CascadingParameter] 
    public IModalService Modal { get; set; } = default!;

    /// <summary>
    /// Вход/Регистрация
    /// </summary>
    public RenderFragment AuthPageModel { get; set; } = @<LogInComponent></LogInComponent>;

    /// <summary>
    /// Обработчик переключателя Вход/Регистрация
    /// </summary>
    /// <param name="type"></param>
    private void SetAuthPageMode(LoginOrRegisterEnum type)
    {
        switch (type)
        {
            case LoginOrRegisterEnum.Login:
                AuthPageModel = @<LogInComponent></LogInComponent>;
                break;
            case LoginOrRegisterEnum.Register:
                AuthPageModel = @<SignUpComponent></SignUpComponent>;
                break;
            default:
                break;
        }
    }
}